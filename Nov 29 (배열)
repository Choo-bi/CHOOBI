
배열로 만들 수 있는 프로그램 중 입력받은 값중 최소값 가려내기 프로그램을 만들어보았다.

** 대강 동작단계

1) 배열에 값 입력하기
1-1) 배열 초기화
1-2) 배열에 입력할 값 대입
1-3) 나머지 무효값들을 입력받을 수 있는 최대의 값으로 처리

2) 최소값 추려내기
2-1) 최소값 중 첫번째 배열 값 대입
2-2) 그 다음의 배열값과 최소값과 비교
2-3) 배열값이 작으면 최소값에 대입

3) 최소값 출력

include <stdio.h>
#define SIZE 10

int main()
{
	
	int price[SIZE];
	
	int i = 0 , min;

	for (i = 0; i < SIZE; i++) //배열에 입력할값 받기
	{
		printf("%d번째에 넣을 값을 입력하시오.(0이상 입력)(종료: -1) : ", i + 1);
		
		scanf_s("%d", &price[i]);
		printf("\n");

		if (price[i] < 0)
			break;

	}
	
	for (i = 0; i < SIZE; i++)  //쓰이지 않는 초기화 값 지우기
	{
		if (price[i] <= 0)
			price[i] = sizeof(int);
		
	}

	min = price[0];  // min의 기본값 설정

	for (i = 0; i < SIZE; i++)
	{
		if (min > price[i])
			min = price[i];
	}
	printf("입력한 값 중 최솟값은 %d 입니다.", min);

	return 0;
}

2차원 배열의 기초를 복습하면서 행렬 더하기 코드를 간단히 짜봄.

#include <stdio.h>
#define ROWS 3
#define COLS 3

int main(void)
{
	int r, c;

	int A[ROWS][COLS] = { { 1,1,1 }, { 2,1,3 }, { 1,0,1 } };
	int B[ROWS][COLS] = { { 1,3,3 }, { 1,2,3 }, { 3,2,1 } };
	int C[ROWS][COLS];

	// 두개의 행렬을 더하기
	for (r = 0; r < ROWS; r++) 
	{
		for (c = 0; c < COLS; c++)
		{
			C[r][c] = A[r][c] + B[r][c];
			printf("%d ", C[r][c]);
		}
		printf("\n");
	}

	return 0;
}

첫번째 코드를 짜면서 시간이 너무 지나가는 바람에 두 번째 코드는 너무 쉬운거 고른듯함..
